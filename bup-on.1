.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "bup\-on" "1" "2025\-08\-18" "Bup 0.33.8" ""
.SH NAME
bup\-on \- run a bup server locally and client remotely
.SH SYNOPSIS
bup on <hostname> index \&...
.PP
bup on <hostname> save \&...
.PP
bup on <hostname> split \&...
.PP
bup on <hostname> get \&...
.SH DESCRIPTION
\f[CR]bup on\f[R] runs the given bup command on the given host using
ssh.
It runs a bup server on the local machine, so that commands like
\f[CR]bup save\f[R] on the remote machine can back up to the local
machine.
(You don\[cq]t need to provide a \f[CR]\-\-remote\f[R] option to
\f[CR]bup save\f[R] in order for this to work.)
.PP
See \f[CR]bup\-index\f[R](1), \f[CR]bup\-save\f[R](1), and so on for
details of how each subcommand works.
.PP
This `reverse mode' operation is useful when the machine being backed up
isn\[cq]t supposed to be able to ssh into the backup server.
For example, your backup server can be hidden behind a one\-way firewall
on a private or dynamic IP address; using an ssh key, it can be
authorized to ssh into each of your important machines.
After connecting to each destination machine, it initiates a backup,
receiving the resulting data and storing in its local repository.
.PP
For example, if you run several virtual private Linux machines on a
remote hosting provider, you could back them up to a local (much less
expensive) computer in your basement.
.SH EXAMPLES
.IP
.EX
# First index the files on the remote server

$ bup on myserver index \-vux /etc
bup server: reading from stdin.
Indexing: 2465, done.
bup: merging indexes (186668/186668), done.
bup server: done

# Now save the files from the remote server to the
# local $BUP_DIR

$ bup on myserver save \-n myserver\-backup /etc
bup server: reading from stdin.
bup server: command: \[aq]list\-indexes\[aq]
PackIdxList: using 7 indexes.
Saving: 100.00% (241/241k, 648/648 files), done.    
bup server: received 55 objects.
Indexing objects: 100% (55/55), done.
bup server: command: \[aq]quit\[aq]
bup server: done

# Now we can look at the resulting repo on the local
# machine

$ bup ftp \[aq]cat /myserver\-backup/latest/etc/passwd\[aq]
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
\&...
.EE
.SH SEE ALSO
\f[CR]bup\-index\f[R](1), \f[CR]bup\-save\f[R](1),
\f[CR]bup\-split\f[R](1), \f[CR]bup\-get\f[R](1)
.SH BUP
Part of the \f[CR]bup\f[R](1) suite.
.SH AUTHORS
Avery Pennarun \c
.MT apenwarr@gmail.com
.ME \c.
