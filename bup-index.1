.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "bup\-index" "1" "2025\-08\-18" "Bup 0.33.8" ""
.SH NAME
bup\-index \- print and/or update the bup filesystem index
.SH SYNOPSIS
bup index <\-p|\-m|\-s|\-u|\-\-clear|\-\-check> [\-H] [\-l] [\-x]
[\-\-fake\-valid] [\-\-no\-check\-device] [\-\-fake\-invalid] [\-f
\f[I]indexfile\f[R]] [\-\-exclude \f[I]path\f[R]] [\-\-exclude\-from
\f[I]filename\f[R]] [\-\-exclude\-rx \f[I]pattern\f[R]]
[\-\-exclude\-rx\-from \f[I]filename\f[R]] [\-v] <paths\&...>
.SH DESCRIPTION
\f[CR]bup index\f[R] manipulates the filesystem index, which is a cache
of absolute paths and their metadata (attributes, SHA\-1 hashes, etc.).
The bup index is similar in function to the \f[CR]git\f[R](1) index, and
the default index can be found in \f[CR]$BUP_DIR/bupindex\f[R].
.PP
Creating a backup in bup consists of two steps: updating the index with
\f[CR]bup index\f[R], then actually backing up the files (or a subset of
the files) with \f[CR]bup save\f[R].
The separation exists for these reasons:
.IP "1." 3
There is more than one way to generate a list of files that need to be
backed up.
For example, you might want to use \f[CR]inotify\f[R](7) or
\f[CR]dnotify\f[R](7).
.IP "2." 3
Even if you back up files to multiple destinations (for added
redundancy), the file names, attributes, and hashes will be the same
each time.
Thus, you can save the trouble of repeatedly re\-generating the list of
files for each backup set.
.IP "3." 3
You may want to use the data tracked by bup index for other purposes
(such as speeding up other programs that need the same information).
.SH NOTES
At the moment, bup will ignore Linux attributes (cf.\ chattr(1) and
lsattr(1)) on some systems (any big\-endian systems where sizeof(long) <
sizeof(int)).
This is because the Linux kernel and FUSE currently disagree over the
type of the attr system call arguments, and so on big\-endian systems
there\[cq]s no way to get the results without the risk of stack
corruption (http://lwn.net/Articles/575846/).
In these situations, bup will print a warning the first time Linux attrs
are relevant during any index/save/restore operation.
.PP
bup makes accommodations for the expected \[lq]worst\-case\[rq]
filesystem timestamp resolution \[en] currently one second; examples
include VFAT, ext2, ext3, small ext4, etc.
Since bup cannot know the filesystem timestamp resolution, and could be
traversing multiple filesystems during any given run, it always assumes
that the resolution may be no better than one second.
.PP
As a practical matter, this means that index updates are a bit
imprecise, and so \f[CR]bup save\f[R] may occasionally record filesystem
changes that you didn\[cq]t expect.
That\[cq]s because, during an index update, if bup encounters a path
whose actual timestamps are more recent than one second before the
update started, bup will set the index timestamps for that path (mtime
and ctime) to exactly one second before the run, \[en] effectively
capping those values.
.PP
This ensures that no subsequent changes to those paths can result in
timestamps that are identical to those in the index.
If that were possible, bup could overlook the modifications.
.PP
You can see the effect of this behavior in this example (assume that
less than one second elapses between the initial file creation and first
index run):
.IP
.EX
$ touch src/1 src/2
# A \[dq]sleep 1\[dq] here would avoid the unexpected save.
$ bup index src
$ bup save \-n src src  # Saves 1 and 2.
$ date > src/1
$ bup index src
$ date > src/2         # Not indexed.
$ bup save \-n src src  # But src/2 is saved anyway.
.EE
.PP
Strictly speaking, bup should not notice the change to src/2, but it
does, due to the accommodations described above.
.SH MODES
.TP
\-u, \-\-update
recursively update the index for the given paths and their descendants.
One or more paths must be specified, and if a path ends with a symbolic
link, the link itself will be indexed, not the target.
If no mode option is given, \f[CR]\-\-update\f[R] is the default, and
paths may be excluded by the \f[CR]\-\-exclude\f[R],
\f[CR]\-\-exclude\-rx\f[R], and \f[CR]\-\-one\-file\-system\f[R]
options.
.TP
\-p, \-\-print
print the contents of the index.
If paths are given, shows the given entries and their descendants.
If no paths are given, shows the entries starting at the current working
directory (.).
.TP
\-m, \-\-modified
prints only files which are marked as modified (ie.
changed since the most recent backup) in the index.
Implies \f[CR]\-p\f[R].
.TP
\-s, \-\-status
prepend a status code (A, M, D, or space) before each path.
Implies \f[CR]\-p\f[R].
The codes mean, respectively, that a file is marked in the index as
added, modified, deleted, or unchanged since the last backup.
.TP
\-\-check
carefully check index file integrity before and after updating.
Mostly useful for automated tests.
.TP
\-\-clear
clear the default index.
.SH OPTIONS
.TP
\-H, \-\-hash
for each file printed, prepend the most recently recorded hash code.
The hash code is normally generated by \f[CR]bup save\f[R].
For objects which have not yet been backed up, the hash code will be
0000000000000000000000000000000000000000.
Note that the hash code is printed even if the file is known to be
modified or deleted in the index (ie.
the file on the filesystem no longer matches the recorded hash).
If this is a problem for you, use \f[CR]\-\-status\f[R].
.TP
\-l, \-\-long
print more information about each file, in a similar format to the
\f[CR]\-l\f[R] option to \f[CR]ls\f[R](1).
.TP
\-x, \-\-xdev, \-\-one\-file\-system
don\[cq]t cross filesystem boundaries when traversing the filesystem
\[en] though as with tar and rsync, the mount points themselves will
still be indexed.
Only applicable if you\[cq]re using \f[CR]\-u\f[R].
.TP
\-\-fake\-valid
mark specified paths as up\-to\-date even if they aren\[cq]t.
This can be useful for testing, or to avoid unnecessarily backing up
files that you know are boring.
.TP
\-\-fake\-invalid
mark specified paths as not up\-to\-date, forcing the next \[lq]bup
save\[rq] run to re\-check their contents.
.TP
\-f, \-\-indexfile=\f[I]indexfile\f[R]
use a different index filename instead of \f[CR]$BUP_DIR/bupindex\f[R].
.TP
\-\-exclude=\f[I]path\f[R]
exclude \f[I]path\f[R] from the backup (may be repeated).
.TP
\-\-exclude\-from=\f[I]filename\f[R]
read \[en]exclude paths from \f[I]filename\f[R], one path per\-line (may
be repeated).
Ignore completely empty lines.
.TP
\-\-exclude\-rx=\f[I]pattern\f[R]
exclude any path matching \f[I]pattern\f[R], which must be a Python
regular expression (http://docs.python.org/library/re.html).
The pattern will be compared against the full path, without anchoring,
so \[lq]x/y\[rq] will match \[lq]ox/yard\[rq] or \[lq]box/yards\[rq].
To exclude the contents of /tmp, but not the directory itself, use
\[lq]\[ha]/tmp/.\[rq].
(may be repeated)
.RS
.PP
Examples:
.IP \[bu] 2
`/foo$' \- exclude any file named foo
.IP \[bu] 2
`/foo/$' \- exclude any directory named foo
.IP \[bu] 2
`/foo/.' \- exclude the content of any directory named foo
.IP \[bu] 2
`\[ha]/tmp/.' \- exclude root\-level /tmp\[cq]s content, but not /tmp
itself
.RE
.TP
\-\-exclude\-rx\-from=\f[I]filename\f[R]
read \[en]exclude\-rx patterns from \f[I]filename\f[R], one pattern
per\-line (may be repeated).
Ignore completely empty lines.
.TP
\-\-no\-check\-device
don\[cq]t mark an entry invalid if the device number (stat(2) st_dev)
changes.
This can be useful when indexing remote, automounted, or snapshot
filesystems (LVM, Btrfs, etc.), where the device number isn\[cq]t fixed.
.TP
\-v, \-\-verbose
increase log output during update (can be used more than once).
With one \f[CR]\-v\f[R], print each directory as it is updated; with two
\f[CR]\-v\f[R], print each file too.
.SH EXAMPLES
.IP
.EX
bup index \-vux /etc /var /usr
.EE
.SH SEE ALSO
\f[CR]bup\-save\f[R](1), \f[CR]bup\-drecurse\f[R](1),
\f[CR]bup\-on\f[R](1)
.SH BUP
Part of the \f[CR]bup\f[R](1) suite.
.SH AUTHORS
Avery Pennarun \c
.MT apenwarr@gmail.com
.ME \c.
